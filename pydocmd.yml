site_name: "Ravestate"
theme: material

# This tells pydocmd which pages to generate from which Python modules,
# functions and classes. At the first level is the page name, below that
# is a tree of Python member names (modules, classes, etc.) that should be
# documented. Higher indentation leads to smaller header size.
generate:
- states.md:
  - ravestate.state++
  - ravestate.constraint++
  - ravestate.receptor++
- properties.md:
  - ravestate.property++
- modules.md:
  - ravestate.module++
- context.md:
  - ravestate.context++
  - ravestate.spike++
  - ravestate.activation++
  - ravestate.causal++
- config.md:
  - ravestate.argparser++
  - ravestate.config++


# MkDocs pages configuration. The `<<` operator is sugar added by pydocmd
# that allows you to use an external Markdown file (eg. your project's README)
# in the documentation. The path must be relative to current working directory.
pages:
- Home: index.md << README.md
- Modules:
  - NLP: modules/ravestate_nlp/README.md << modules/ravestate_nlp/README.md
  - Verbaliser: modules/ravestate_verbaliser/README.md << modules/ravestate_verbaliser/README.md
  - TelegramIO: modules/ravestate_telegramio/README.md << modules/ravestate_telegramio/README.md
  - Akinator: modules/ravestate_akinator/README.md << modules/ravestate_akinator/README.md
- API:
  - Modules: modules.md
  - States: states.md
  - Properties: properties.md
  - Context: context.md
  - Configuration: config.md

site_dir: docs

# Additional search path for your Python module. If you use Pydocmd from a
# subdirectory of your project (eg. docs/), you may want to add the parent
# directory here.
additional_search_paths:
- modules