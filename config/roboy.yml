# In addition to this file, load a config file `keys.yml`, where
#  `keys.yml` should contain the following content:
#
#   module: telegramio
#   config:
#     telegram-token: <sexycactus>  # Your telegram token here
#   ---
#   module: ontology
#   config:
#     neo4j_address: bolt://localhost:7687  # Your neo4j server uri here
#     neo4j_username: neo4j                 # Your neo4j user here
#     neo4j_pw: <cornycrab>                 # Your neo4j pw here
#
# Then, start `python3 -m ravestate` with `-f config/generic.yml -f config/keys.yml`

---
module: core
config:
  tickrate: 10
  import:
      #- ravestate_conio
    - ravestate_roboyio
    - ravestate_roboyqa
    - ravestate_genqa
    - ravestate_persqa
    - ravestate_wildtalk
    - ravestate_hibye
    #- ravestate_stalker
    - ravestate_fillers
    #- ravestate_akinator

---
module: idle
config:
  impatience_threshold: 6.0  # number of seconds of "pressure" after which a filler should be sent
  bored_threshold: 12.0 # number of seconds of "no activity" after which active engagement should activate

---
module: genqa
config:
  drqa_server_address: http://35.246.158.89:5000
  roboy_answer_sanity: 1000

---
module: roboyqa
config:
  roboy_node_id: 356

---
module: roboyio
config:
  head_axis0_lower_limit: -0.3    # minimum lean backwards
  head_axis0_upper_limit: 0.3     # maximum lean forwards
  head_axis1_lower_limit: -0.3    # minimum lean right
  head_axis1_upper_limit: 0.3     # maximum lean left
  head_axis2_lower_limit: -0.3    # minimum turn right
  head_axis2_upper_limit: 0.3     # maximum turn left
  head_movement_probability: 0.5  # probability for a head axis to move on input/bored; decided separately for each axis
  eye_movement_probability: 0.5   # probability for eyes to look left/right/down/up on input/bored

---
module: emotion
config:
  shy_probability: 0.2            # Probability for being shy when input is about Roboy
  surprise_probability: 0.1       # Probability for being surprised when input is question
  happy_probability: 0.1          # Probability for being happy when output is generated
  affectionate_probability: 0.5   # Probability for being affectionate when keyword is in input and input is about Roboy